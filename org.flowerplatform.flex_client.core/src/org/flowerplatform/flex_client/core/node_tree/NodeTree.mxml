<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:tree="org.flowerplatform.flexutil.tree.*"
		 implements="org.flowerplatform.flexutil.view_content_host.IViewContent"
		 creationComplete="creationCompleteHandler()" xmlns:ns="org.flowerplatform.flex_client.core.node_tree.*">
	<fx:Script>
		<![CDATA[
			import org.flowerplatform.flex_client.core.CorePlugin;
			import org.flowerplatform.flex_client.core.editor.remote.Node;
			import org.flowerplatform.flexutil.FlexUtilGlobals;
			import org.flowerplatform.flexutil.Pair;
			import org.flowerplatform.flexutil.layout.event.ViewRemovedEvent;
			import org.flowerplatform.flexutil.selection.ISelectionProvider;
			import org.flowerplatform.flexutil.view_content_host.IViewHost;
			
			protected var _viewHost:IViewHost;
									
			public function set viewHost(viewHost:IViewHost):void {
				_viewHost = viewHost;
			}

			public function additionalCloseHandler():void {
				// do nothing
			}	
			
			protected function creationCompleteHandler():void {		
				IEventDispatcher( _viewHost).addEventListener(ViewRemovedEvent.VIEW_REMOVED, viewRemovedHandler);
				
				var activeSelectionProvider:ISelectionProvider = FlexUtilGlobals.getInstance().selectionManager.activeSelectionProvider;
				var node:Node = Node(activeSelectionProvider.getSelection().getItemAt(0));
				var pair:Pair = CorePlugin.getInstance().getSubscribableResource(node);
				var resourceUri:String = String(pair.a);
				
				treeList.initializeTree(resourceUri);				
			}
			
			private function viewRemovedHandler(event:ViewRemovedEvent):void {
				treeList.finalizeTree();
			}
			
		]]>
	</fx:Script>
	
	<ns:NodeTreeComponent id="treeList" width="100%" height="100%" />
	
</s:Group>
