<?xml version="1.0" encoding="utf-8"?>
<!-- 
license-start

Copyright (C) 2008 - 2013 Crispico Software, <http://www.crispico.com/>.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation version 3.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details, at <http://www.gnu.org/licenses/>.

license-end
-->
<ns:BasicViewContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
					 xmlns:s="library://ns.adobe.com/flex/spark" 
					 xmlns:mx="library://ns.adobe.com/flex/mx" 
					 xmlns:ns="org.flowerplatform.flexutil.view_content_host.*"
					 creationComplete="creationCompleteDiffFromCommitsHandler(event)">
	
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import org.flowerplatform.flex_client.core.CorePlugin;
			import org.flowerplatform.flex_client.resources.Resources;
			import org.flowerplatform.flexutil.Utils;
			
			[Bindable]
			public var repo:String;
			
			protected var okPseudoEnabled:Boolean = false;
			
			protected function creationCompleteDiffFromCommitsHandler(event:FlexEvent):void {
				Utils.makePseudoDisabled(startResultArea);
				Utils.makePseudoDisabled(endResultArea);
				okButton.enabled = false;
				getStartInfo.enabled = getEndInfo.enabled = false;
				currentState = "Messages";
			}
			
			protected function changeToStartResult():void {
				if(currentState == "EndResult" || currentState == 'Results')
					currentState = "Results";
				else
					currentState = "StartResult";
			}
			
			protected function changeToEndResult():void {
				if(currentState == "StartResult"  || currentState == 'Results')
					currentState = "Results";
				else
					currentState = "EndResult";
			}
			
			protected function changeToStartMessage():void {
				if(currentState == 'Results')
					currentState = 'EndResult';
				else
					if(currentState == 'StartResult')
						currentState = 'Messages';
			}
			
			protected function changeToEndMessage():void {
				if(currentState == 'Results')
					currentState = 'StartResult';
				else
					if(currentState == 'EndResult')
						currentState = 'Messages';
			}
			
			protected function validateStartHashHandler(isHashValid:Boolean):void{
				if(isHashValid == true) {
					if(okPseudoEnabled == true)
						okButton.enabled = true;
					else
						okPseudoEnabled = true;					
					changeToStartResult();
				}
				else {
					startResultArea.text = Resources.getMessage('flex_client.team.git.createSdiff.invalidState');
					changeToStartMessage();
					if(okPseudoEnabled == true)
						okPseudoEnabled = false;
					okButton.enabled = false;
				}
			}
			
			protected function validateEndHashHandler(isHashValid:Boolean):void{
				if(isHashValid == true) {
					if(okPseudoEnabled == true)
						okButton.enabled = true;
					else
						okPseudoEnabled = true;
					changeToEndResult();
				}
				else {
					endResultArea.text = Resources.getMessage('flex_client.team.git.createSdiff.invalidState');
					changeToEndMessage();
					if(okPseudoEnabled == true)
						okPseudoEnabled = false;
					okButton.enabled = false;
				}
			}
			
			protected function clickGetStartInfoHandler(event:MouseEvent):void {				
				CorePlugin.getInstance().serviceLocator.invoke("GitService.validateHash", 
										[startHash.text, repo], validateStartHashHandler);
			}
			
			protected function clickGetEndInfoHandler(event:MouseEvent):void {
				CorePlugin.getInstance().serviceLocator.invoke("GitService.validateHash", 
										[endHash.text, repo], validateEndHashHandler);	
			}
			
			protected function changeStartHashHandler(event:Event):void {
				if(startHash.text.length == 0){
					startResultArea.text = Resources.getMessage('flex_client.team.git.createSdiff.defaultState');
					getStartInfo.enabled = false;
					changeToStartMessage();
				}
				else
					getStartInfo.enabled = true;
			}
			
			protected function changeEndHashHandler(event:Event):void {	
				if(endHash.text.length == 0){
					endResultArea.text = Resources.getMessage('flex_client.team.git.createSdiff.defaultState');
					getEndInfo.enabled = false;
					changeToEndMessage();
				}
				else
					getEndInfo.enabled = true;				
			}

			
		]]>
	</fx:Script>
	
	<ns:states>
		<s:State name="Messages" />
		<s:State name="StartResult"/>
		<s:State name="EndResult"/>
		<s:State name="Results"/>
	</ns:states>	
	
	<s:VGroup gap="40" width="100%" height="100%">
		<s:VGroup width="100%" height="50%">
			<s:HGroup width="100%" verticalAlign="middle" gap="5">
				<s:Label id="sLabel"
						 text="{Resources.getMessage('flex_client.team.git.createSdiff.startHash')}"/>		
				<s:TextInput id="startHash" width="245" change="changeStartHashHandler(event)"/>
				<s:Button id="getStartInfo"
						  label="{Resources.getMessage('flex_client.team.git.createSdiff.getInfo')}"
						  click="clickGetStartInfoHandler(event)"/>
			</s:HGroup>
			
			<s:TextArea id="startResultArea"
						width="100%" height="100%"
						text="{Resources.getMessage('flex_client.team.git.createSdiff.defaultState')}"
						fontStyle="italic"
						includeIn="Messages, EndResult"/>
			
			<s:Button label="Test" includeIn="StartResult, Results"/>				
		</s:VGroup>	
		
		
		<s:VGroup width="100%" height="50%">
			<s:HGroup width="100%" verticalAlign="middle" gap="5">
				<s:Label text="{Resources.getMessage('flex_client.team.git.createSdiff.endHash')}"
						 width="{sLabel.width}"/>		
				<s:TextInput id="endHash" width="245" change="changeEndHashHandler(event)"/>
				<s:Button id="getEndInfo"
						  label="{Resources.getMessage('flex_client.team.git.createSdiff.getInfo')}"
						  click="clickGetEndInfoHandler(event)"/>
			</s:HGroup>
			
			<s:TextArea id="endResultArea"
						width="100%" height="100%"
						text="{Resources.getMessage('flex_client.team.git.createSdiff.defaultState')}"
						fontStyle="italic"
						includeIn="Messages, StartResult"/>
			
			<s:Button label="Test" includeIn="EndResult, Results"/>
		</s:VGroup>
		
		<s:HGroup width="100%" verticalAlign="middle" gap="5">
			<s:Label text="{Resources.getMessage('flex_client.team.git.createSdiff.fileName')}"/>
			<s:TextInput id="filename" text="Untitled" width="200"/>
			<s:Label text="{repo + '|sdiffs/' + filename.text + '.sdiff'}" fontWeight="bold"/>
		</s:HGroup>
	</s:VGroup>	
	
</ns:BasicViewContent>
