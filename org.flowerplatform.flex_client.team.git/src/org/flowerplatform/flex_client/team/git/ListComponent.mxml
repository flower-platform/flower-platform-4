<?xml version="1.0" encoding="utf-8"?>
<!-- 
	license-start
 
	Copyright (C) 2008 - 2014 Crispico Software, <http://www.crispico.com/>.
	
	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation version 3.
	 
	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details, at <http://www.gnu.org/licenses/>.
	
	license-end
-->
<s:List xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" 
		implements="org.flowerplatform.flexutil.selection.ISelectionProvider, org.flowerplatform.flexutil.action.IActionProvider">
	<fx:Script>
		<![CDATA[
			import mx.collections.IList;
			
			import org.apache.flex.collections.ArrayList;
			import org.flowerplatform.flex_client.team.git.action.AddToGitIndex;
			import org.flowerplatform.flex_client.team.git.action.RemoveFromGitIndex;
			import org.flowerplatform.flexutil.action.ClassFactoryActionProvider;
			import org.flowerplatform.flexutil.action.IAction;
			import org.flowerplatform.flexutil.view_content_host.IViewHost;
			
			public var gitIndex:Boolean = true;
			public var host:IViewHost
			protected var icon:Class;
			protected var actionStagedProvider:ClassFactoryActionProvider = new ClassFactoryActionProvider()
				.addActionClass(RemoveFromGitIndex);
			protected var actionUnstagedProvider:ClassFactoryActionProvider = new ClassFactoryActionProvider()
				.addActionClass(AddToGitIndex);
			
			public function getSelection():IList {
				var result:Array = new Array();
				
				if (this.selectedIndices) {
					var count:int = this.selectedIndices.length;
					
					for (var i:int = 0; i < count; i++)
						result.push(this.dataProvider.getItemAt(this.selectedIndices[i]));  
				}
				return new ArrayList(result);
			}
			public function getActions(selection:IList):Vector.<IAction> {
				if(gitIndex) {
					return actionUnstagedProvider.getActions(selection);
				} else {
					return actionStagedProvider.getActions(selection);
				}
			}
			
		]]>
	</fx:Script>
	<s:itemRenderer>
		<fx:Component>
			<s:IconItemRenderer width="100%"
								iconFunction="{myiconfunction}"
								verticalAlign="middle"
								paddingLeft="5"
								creationComplete="item_creationCompleteHandler(event)">
				<fx:Script>
					<![CDATA[
						import mx.events.FlexEvent;
						
						import org.flowerplatform.flex_client.core.CoreConstants;
						import org.flowerplatform.flex_client.core.editor.remote.Node;
						import org.flowerplatform.flexutil.FlexUtilGlobals;
						
						private function myiconfunction(data:Node):Object {
							return data.getPropertyValue(CoreConstants.ICONS);
						}
						
						protected function item_creationCompleteHandler(event:FlexEvent):void
						{
							if (!FlexUtilGlobals.getInstance().isMobile) {
								// only for web
								minHeight = 22;	
							}
						}	
					]]>
				</fx:Script>
			</s:IconItemRenderer>
		</fx:Component>
	</s:itemRenderer> 
</s:List>
