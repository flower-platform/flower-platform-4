<?xml version="1.0" encoding="utf-8"?>
<!-- 
	license-start
 
	Copyright (C) 2008 - 2014 Crispico Software, <http://www.crispico.com/>.
	
	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation version 3.
	 
	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details, at <http://www.gnu.org/licenses/>.
	
	license-end
-->
<!-- 
@author Cojocea Marius Eduard
-->
<ns:BasicViewContent xmlns:fx="http://ns.adobe.com/mxml/2009"
					 xmlns:s="library://ns.adobe.com/flex/spark"
					 xmlns:mx="library://ns.adobe.com/flex/mx"
					 xmlns:ns="org.flowerplatform.flexutil.view_content_host.*"
					 xmlns:ntc="org.flowerplatform.flex_client.core.node_tree.*"					 
					 >	
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import org.flowerplatform.flex_client.core.CorePlugin;
			import org.flowerplatform.flex_client.core.editor.remote.Node;
			import org.flowerplatform.flex_client.resources.Resources;
			import org.flowerplatform.flex_client.team.git.GitConstants;
			import org.flowerplatform.flexutil.FlexUtilGlobals;
			import org.flowerplatform.flexutil.tree.HierarchicalModelWrapper;
				
			[Bindable]
			public var node:Node;
						
			override protected function creationCompleteHandler(event:FlexEvent):void {
				super.creationCompleteHandler(event);
				tree.initializeTree(CorePlugin.getInstance().createNodeUriWithRepo(
					GitConstants.GIT_SCHEME, 
					CorePlugin.getInstance().getRepository(node.nodeUri), 
					GitConstants.GIT_REPO_TYPE));
			}
			
			protected function treeClickHandler(event:MouseEvent):void {
				var selectedNode:Node = Node(HierarchicalModelWrapper(tree.selectedItem).treeNode);
				if (selectedNode.type == GitConstants.GIT_LOCAL_BRANCH_TYPE ||
					selectedNode.type == GitConstants.GIT_REMOTE_BRANCH_TYPE) {					
					textInput.text = selectedNode.getPropertyValue(GitConstants.FULL_NAME);			
				}
			}
						
			override public function okHandler(event:Event = null):void {
				CorePlugin.getInstance().serviceLocator.invoke("GitService.validateHash",
					[textInput.text, CorePlugin.getInstance().getRepository(node.nodeUri)],
					function(result:Boolean):void {
						if(!result){
							FlexUtilGlobals.getInstance().messageBoxFactory.createMessageBox()
							.setText(Resources.getMessage('flex_client.team.git.createSdiff.invalidState'))
							.setTitle(Resources.getMessage("error"))
							.setWidth(200)
							.setHeight(120)								
							.showMessageBox();
						} else {
							CorePlugin.getInstance().serviceLocator.invoke("GitService.rebase", [node.nodeUri, textInput.text],
								function(result:String):void {
									FlexUtilGlobals.getInstance().messageBoxFactory.createMessageBox()
									.setText(result)
									.setTitle(Resources.getMessage('flex_client.team.git.ui.rebase.result'))
									.setWidth(300)
									.setHeight(200)
									.showMessageBox();});
							cancelHandler(event);
						}
					});				
			}
			
		]]>
	</fx:Script>
	
	<ntc:NodeTreeComponent id="tree" width="100%" height="100%" click="treeClickHandler(event)"/>
		
	<s:Form width="100%">
		<s:FormItem label="{Resources.getMessage('flex_client.team.git.action.rebase.view.label')}" >
			<s:TextInput width="100%" id="textInput" click="{textInput.selectAll();}" />
		</s:FormItem>
	</s:Form>				
</ns:BasicViewContent>
