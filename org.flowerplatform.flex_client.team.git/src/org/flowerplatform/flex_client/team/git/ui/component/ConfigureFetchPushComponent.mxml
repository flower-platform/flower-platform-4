<?xml version="1.0" encoding="utf-8"?>
<!-- 
license-start

Copyright (C) 2008 - 2013 Crispico Software, <http://www.crispico.com/>.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation version 3.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details, at <http://www.gnu.org/licenses/>.

license-end
-->
<!--
@author Cristina Brinza
-->

<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:layout="org.osmf.layout.*"
		 creationComplete="creationCompleteHandler(event)"
		 implements="org.flowerplatform.flexutil.dialog.IDialogResultHandler"
		 width="100%" height="100%">
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			import spark.components.Button;
			
			import org.flowerplatform.flex_client.resources.Resources;
			import org.flowerplatform.flex_client.team.git.ui.EditRefSpecView;
			import org.flowerplatform.flexutil.FlexUtilGlobals;
			import org.flowerplatform.flexutil.dialog.IDialogResultHandler;
			
			[Bindable]
			public var refMappings:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			public var remoteUri:String = "";
			
			private var lastBtnPressed:Button;
			
			public function getRefSpecs():ArrayCollection {
				if (refMappings == null) {
					return new ArrayCollection();
				}
				return refMappings;
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void {
				if (configureTextInput.text != "") {
					configureTextInput.editable = false;
				} else {
					configureTextInput.setFocus();
				}
			}
			
			protected function addButtonClickHandler(event:MouseEvent):void {
				lastBtnPressed = addButton;
				
				var view:EditRefSpecView = new EditRefSpecView();
				view.currentRefSpec = null;
				view.setResultHandler(this);
				
				FlexUtilGlobals.getInstance().popupHandlerFactory.createPopupHandler()
					.setViewContent(view)
					.setWidth(this.width)
					.setHeight(this.width * 0.4)
					.show();
			}
			
			protected function editButtonClickHandler(event:MouseEvent):void {
				lastBtnPressed = editButton;
				
				var view:EditRefSpecView = new EditRefSpecView();
				view.currentRefSpec = refMappingsList.selectedItem;
				view.setResultHandler(this);
				
				FlexUtilGlobals.getInstance().popupHandlerFactory.createPopupHandler()
					.setViewContent(view)
					.setWidth(550)
					.setHeight(500)
					.show();
			}
			
			protected function deleteButtonClickHandler(event:MouseEvent):void {
				refMappings.removeItemAt(refMappingsList.selectedIndex);
			}
			
			public function handleDialogResult(result:Object):void {
				if (result == null) {
					return;
				}
				
				if (lastBtnPressed == addButton) {					
					refMappings.addItem(result);
				} else if (lastBtnPressed == editButton) {
					refMappings.setItemAt(result, refMappingsList.selectedIndex);
				}
			}
			
		]]>
	</fx:Script>
	
	<s:layout>
		<s:VerticalLayout paddingLeft="15" paddingTop="10" 
						  horizontalAlign="left"
						  gap="10"/>
	</s:layout>
	
	<s:HGroup width="100%" verticalAlign="middle">
		<s:Label id="uriLabel"
				 text="{Resources.getMessage('flex_client.team.git.ui.component.configureFetchPush.URI')}"
				 fontWeight="bold"/>
		<s:TextInput id="configureTextInput"
					 width="{refMappingsList.width - uriLabel.width}"
					 text="@{remoteUri}"/>
	</s:HGroup>
	
	<s:HGroup width="100%" height="100%" paddingTop="10">
		<s:VGroup width="100%" height="100%">
			<s:Label text="{Resources.getMessage('flex_client.team.git.ui.component.configureFetchPush.refMappings')}"
					 fontWeight="bold"/>
			<s:List id="refMappingsList"
					width="100%"
					height="100%"
					dataProvider="{refMappings}"/>
		</s:VGroup>
				
		<s:VGroup gap="2" paddingTop="15">
			<s:Button id="addButton"
					  label="{Resources.getMessage('flex_client.team.git.ui.component.configureFetchPush.addButton')}"
					  click="addButtonClickHandler(event)"/>
			
			<s:Button id="editButton"
					  label="{Resources.getMessage('flex_client.team.git.ui.component.configureFetchPush.editButton')}"
					  click="editButtonClickHandler(event)"
					  enabled="{refMappingsList.selectedIndex != -1}"/>
			
			<s:Button id= "deleteButton"
					  label="{Resources.getMessage('flex_client.team.git.ui.component.configureFetchPush.deleteButton')}"
					  click="deleteButtonClickHandler(event)"
					  enabled="{refMappingsList.selectedIndex != -1}"/>
		</s:VGroup>
	</s:HGroup>
</s:Group>
