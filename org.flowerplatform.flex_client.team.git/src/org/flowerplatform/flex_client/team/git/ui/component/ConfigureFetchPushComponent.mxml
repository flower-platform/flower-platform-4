<?xml version="1.0" encoding="utf-8"?>
<!-- 
	license-start
 
	Copyright (C) 2008 - 2013 Crispico Software, <http://www.crispico.com/>.
	
	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation version 3.
	 
	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details, at <http://www.gnu.org/licenses/>.
	
	license-end
-->
<!--
@author Cristina Brinza
-->

<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 implements="org.flowerplatform.flexutil.dialog.IDialogResultHandler">
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			
			import spark.components.Button;
			
			import org.flowerplatform.flex_client.resources.Resources;
			import org.flowerplatform.flex_client.team.git.ui.EditRefSpecView;
			import org.flowerplatform.flexutil.FlexUtilGlobals;
			import org.flowerplatform.flexutil.dialog.IDialogResultHandler;
			
			[Bindable]
			public var refMappings:ArrayCollection = new ArrayCollection();
						
			private var lastBtnPressed:Button;
			
			public function getRefSpecs():ArrayCollection {
				if (refMappings == null) {
					return new ArrayCollection();
				}
				return refMappings;
			}
			
			protected function addButtonClickHandler(event:MouseEvent):void {
				lastBtnPressed = addButton;
				
				var view:EditRefSpecView = new EditRefSpecView();				
				view.setResultHandler(this);
				
				FlexUtilGlobals.getInstance().popupHandlerFactory.createPopupHandler()
					.setViewContent(view)
					.setWidth(400)
					.setHeight(150)
					.show();
			}
			
			protected function editButtonClickHandler(event:MouseEvent):void {
				lastBtnPressed = editButton;
				
				var view:EditRefSpecView = new EditRefSpecView();
				view.currentRefSpec = refMappingsList.selectedItem;
				view.setResultHandler(this);
				
				FlexUtilGlobals.getInstance().popupHandlerFactory.createPopupHandler()
					.setViewContent(view)
					.setWidth(400)
					.setHeight(150)
					.show();
			}
			
			protected function deleteButtonClickHandler(event:MouseEvent):void {
				refMappings.removeItemAt(refMappingsList.selectedIndex);
			}
			
			public function handleDialogResult(result:Object):void {
				if (result == null) {
					return;
				}
				
				if (lastBtnPressed == addButton) {
					if (refMappings == null) {
						refMappings = new ArrayCollection();
					}
					refMappings.addItem(result);
				} else if (lastBtnPressed == editButton) {
					refMappings.setItemAt(result, refMappingsList.selectedIndex);
				}
			}
			
		]]>
	</fx:Script>
	
	<s:layout>
		<s:VerticalLayout gap="10" paddingTop="10" paddingLeft="10" paddingRight="10" paddingBottom="10" />
	</s:layout>
		
	<s:Label text="{Resources.getMessage('flex_client.team.git.ui.component.configureFetchPush.refMappings')}" fontWeight="bold"/>
	
	<s:HGroup width="100%" height="100%" >
		<s:List id="refMappingsList"
				width="100%" height="100%"
				dataProvider="{refMappings}"/>
	
		<s:VGroup gap="2" >
			<s:Button id="addButton"
					  label="{Resources.getMessage('flex_client.team.git.ui.component.configureFetchPush.addButton')}"
					  click="addButtonClickHandler(event)"/>
			
			<s:Button id="editButton"
					  label="{Resources.getMessage('flex_client.team.git.ui.component.configureFetchPush.editButton')}"
					  click="editButtonClickHandler(event)"
					  enabled="{refMappingsList.selectedIndex != -1}"/>
			
			<s:Button id= "deleteButton"
					  label="{Resources.getMessage('flex_client.team.git.ui.component.configureFetchPush.deleteButton')}"
					  click="deleteButtonClickHandler(event)"
					  enabled="{refMappingsList.selectedIndex != -1}"/>
		</s:VGroup>		
	</s:HGroup>
	
</s:Group>