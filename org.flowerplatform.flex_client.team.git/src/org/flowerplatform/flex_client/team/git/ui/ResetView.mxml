<?xml version="1.0" encoding="utf-8"?>
<!-- 
	license-start
 
	Copyright (C) 2008 - 2014 Crispico Software, <http://www.crispico.com/>.
	
	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation version 3.
	 
	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details, at <http://www.gnu.org/licenses/>.
	
	license-end
-->
<!--
 @author Diana Balutoiu
-->
<ns:BasicViewContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
					 xmlns:s="library://ns.adobe.com/flex/spark" 
					 xmlns:mx="library://ns.adobe.com/flex/mx" 
					 xmlns:ns="org.flowerplatform.flexutil.view_content_host.*"
					 xmlns:ntc="org.flowerplatform.flex_client.core.node_tree.*">
	
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import org.flowerplatform.flex_client.core.CoreConstants;
			import org.flowerplatform.flex_client.core.CorePlugin;
			import org.flowerplatform.flex_client.core.editor.remote.Node;
			import org.flowerplatform.flex_client.resources.Resources;
			import org.flowerplatform.flex_client.team.git.GitConstants;
			import org.flowerplatform.flexutil.FlexUtilGlobals;
			import org.flowerplatform.flexutil.layout.event.ViewRemovedEvent;
			import org.flowerplatform.flexutil.tree.HierarchicalModelWrapper;
			
			public var node:Node;
				
			override protected function creationCompleteHandler(event:FlexEvent):void {
				tree.initializeTree(CorePlugin.getInstance().createNodeUriWithRepo(
					GitConstants.GIT_SCHEME, 
					CorePlugin.getInstance().getRepository(node.nodeUri), 
					GitConstants.GIT_REPO_TYPE));
			}
			
			private function viewRemovedHandler(event:ViewRemovedEvent):void {
				tree.finalizeTree();
			}
			
			protected function treeClickHandler(event:MouseEvent):void {
				var selectedNode:Node = Node(HierarchicalModelWrapper(tree.selectedItem).treeNode);
				if(selectedNode.type == GitConstants.GIT_LOCAL_BRANCH_TYPE ||
					selectedNode.type == GitConstants.GIT_REMOTE_BRANCH_TYPE ||
					selectedNode.type == GitConstants.GIT_TAG_TYPE){
					textInput.text = selectedNode.getPropertyValue(CoreConstants.NAME);
				}
			}
			
			override protected function okHandler(event:Event = null):void {
				CorePlugin.getInstance().serviceLocator.invoke("GitService.validateHash",
					[textInput.text, CorePlugin.getInstance().getRepository(node.nodeUri)],
					function(result:Boolean):void {
						if(!result){
							FlexUtilGlobals.getInstance().messageBoxFactory.createMessageBox()
							.setText(Resources.getMessage('flex_client.team.git.createSdiff.invalidState'))
							.setTitle(Resources.getMessage("error"))
							.setWidth(200)
							.setHeight(120)								
							.showMessageBox();
						} else {
							CorePlugin.getInstance().serviceLocator.invoke("GitService.reset",
								[node.nodeUri, resetType.selectedValue, textInput.text]);
							cancelHandler(event);
						}
					});
			}

		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:RadioButtonGroup id="resetType"/>
	</fx:Declarations>
	
	<s:VGroup width="100%" height="100%">
		
		<ntc:NodeTreeComponent id="tree" 
							   width="100%" height="100%"
							   click="treeClickHandler(event)"/>
		
		<s:Form width="100%">
			<s:FormItem label = "{Resources.getMessage('flex_client.team.git.ui.resetView.reset')}">
				<s:TextInput width="100%"
							 editable="true"
							 id="textInput"/>
			</s:FormItem>
		</s:Form>
		
		<s:VGroup paddingTop="20">
			<s:Label text="{Resources.getMessage('flex_client.team.git.ui.resetView.resetType')}"/>
			<s:RadioButton group="{resetType}"
						   value="{GitConstants.RESET_SOFT}"
						   label="{Resources.getMessage('flex_client.team.git.ui.resetView.soft')}"/>
			<s:RadioButton group="{resetType}"
						   value="{GitConstants.RESET_MIXED}"
						   label="{Resources.getMessage('flex_client.team.git.ui.resetView.mixed')}"
						   selected="true"/>
			<s:RadioButton group="{resetType}"
						   value="{GitConstants.RESET_HARD}"
						   label="{Resources.getMessage('flex_client.team.git.ui.resetView.hard')}"/>
		</s:VGroup>	
	</s:VGroup>
</ns:BasicViewContent>