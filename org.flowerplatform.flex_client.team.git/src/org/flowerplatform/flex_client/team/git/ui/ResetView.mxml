<?xml version="1.0" encoding="utf-8"?>
<!--@author Diana Balutoiu
-->
<ns:BasicViewContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
					 xmlns:s="library://ns.adobe.com/flex/spark" 
					 xmlns:mx="library://ns.adobe.com/flex/mx" 
					 xmlns:ns="org.flowerplatform.flexutil.view_content_host.*"
					 creationComplete="resetCreationCompleteHandler(event)" 
					 xmlns:ntc="org.flowerplatform.flex_client.core.node_tree.*">
	
	<fx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			
			import org.flowerplatform.flex_client.core.CoreConstants;
			import org.flowerplatform.flex_client.core.CorePlugin;
			import org.flowerplatform.flex_client.core.editor.remote.Node;
			import org.flowerplatform.flex_client.resources.Resources;
			import org.flowerplatform.flex_client.team.git.GitConstants;
			import org.flowerplatform.flexutil.FlexUtilAssets;
			import org.flowerplatform.flexutil.FlexUtilGlobals;
			import org.flowerplatform.flexutil.Pair;
			import org.flowerplatform.flexutil.layout.event.ViewRemovedEvent;
			import org.flowerplatform.flexutil.selection.ISelectionProvider;
			import org.flowerplatform.flexutil.tree.HierarchicalModelWrapper;
			
			public var node:Node;
					
			override protected function okHandler(event:Event = null):void {
				CorePlugin.getInstance().serviceLocator.invoke("GitService.validateHash",
					[textInput.text, CorePlugin.getInstance().getRepository(node.nodeUri)],
					function(result:Boolean):void {
						if(!result){
							FlexUtilGlobals.getInstance().messageBoxFactory.createMessageBox()
								.setText(Resources.getMessage('flex_client.team.git.createSdiff.invalidState'))
								.setTitle(Resources.getMessage("error"))
								.setWidth(200)
								.setHeight(120)
								.addButton(FlexUtilAssets.INSTANCE.getMessage('dialog.ok'))
								.showMessageBox();
						} else {
							CorePlugin.getInstance().serviceLocator.invoke("GitService.reset",
								[node.nodeUri, String(resetType.selectedValue), textInput.text]);
							cancelHandler(event);
						}
					});
			}
			
			//TODO: get the "remotes" out of the tree
			protected function resetCreationCompleteHandler(event:FlexEvent):void {		
				var activeSelectionProvider:ISelectionProvider = FlexUtilGlobals.getInstance().selectionManager.activeSelectionProvider;
				var node:Node = Node(activeSelectionProvider.getSelection().getItemAt(0));
				node = node.parent;
				var pair:Pair = CorePlugin.getInstance().getSubscribableResource(node);
				tree.initializeTree(pair == null ? node.nodeUri : pair.a as String);
			}
			
			private function viewRemovedHandler(event:ViewRemovedEvent):void {
				tree.finalizeTree();
			}
			
			protected function treeClickHandler(event:MouseEvent):void {
				var selectedNode:Node = Node(HierarchicalModelWrapper(tree.selectedItem).treeNode);
				if(selectedNode.type == GitConstants.GIT_LOCAL_BRANCH_TYPE ||
					selectedNode.type == GitConstants.GIT_REMOTE_BRANCH_TYPE ||
					selectedNode.type == GitConstants.GIT_TAG_TYPE){
					textInput.text = selectedNode.getPropertyValue(CoreConstants.NAME);
				}
			}

		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:RadioButtonGroup id="resetType"/>
	</fx:Declarations>
	
	<s:VGroup width="100%" height="100%">
		
		<ntc:NodeTreeComponent id="tree" 
							   width="100%" height="200"
							   click="treeClickHandler(event)"/>
		
		<s:Form width="100%">
			<s:FormItem label = "{Resources.getMessage('flex_client.team.git.ui.resetView.reset')}">
				<s:TextInput width="100%"
							 editable="true"
							 id="textInput"/>
			</s:FormItem>
		</s:Form>
		
		<s:VGroup paddingTop="20">
			<s:Label text="{Resources.getMessage('flex_client.team.git.ui.resetView.resetType')}"/>
			<s:RadioButton group="{resetType}"
						   value="{GitConstants.RESET_SOFT}"
						   label="{Resources.getMessage('flex_client.team.git.ui.resetView.soft')}"/>
			<s:RadioButton group="{resetType}"
						   value="{GitConstants.RESET_MIXED}"
						   label="{Resources.getMessage('flex_client.team.git.ui.resetView.mixed')}"
						   selected="true"/>
			<s:RadioButton group="{resetType}"
						   value="{GitConstants.RESET_HARD}"
						   label="{Resources.getMessage('flex_client.team.git.ui.resetView.hard')}"/>
		</s:VGroup>	
	</s:VGroup>
</ns:BasicViewContent>
