<?xml version="1.0" encoding="utf-8"?>
<!-- 
	license-start
 
	Copyright (C) 2008 - 2014 Crispico Software, <http://www.crispico.com/>.
	
	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation version 3.
	 
	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details, at <http://www.gnu.org/licenses/>.
	
	license-end
-->
<s:List xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx" 
		creationComplete="creationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
			import mx.collections.IList;
			import mx.events.FlexEvent;
			
			import org.apache.flex.collections.ArrayList;
			import org.flowerplatform.flex_client.team.git.action.AddToGitIndex;
			import org.flowerplatform.flex_client.team.git.action.RemoveFromGitIndex;
			import org.flowerplatform.flexutil.action.IAction;
			import org.flowerplatform.flexutil.context_menu.FillContextMenuEvent;
			
			public var gitStagingView:GitStagingView;
			
			public var showStageFiles:Boolean = true;
						
			public function getSelection():IList {
				var result:ArrayList = new ArrayList();
				
				if (this.selectedItems) {				
					for each(var obj:Object in selectedItems) {
						result.addItem(obj);  
					}
				}
				return result;
			}
			
			public function getActions(selection:IList):Vector.<IAction> {
				var result:Vector.<IAction> = new Vector.<IAction>();
				
				if (showStageFiles) {
					result.push(new AddToGitIndex(gitStagingView));
				} else {
					result.push(new RemoveFromGitIndex(gitStagingView));
				}
				return result;
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void {
				addEventListener(FillContextMenuEvent.FILL_CONTEXT_MENU, fillContextMenuHandler);
			}
			
			protected function fillContextMenuHandler(event:FillContextMenuEvent):void {
				var selection:IList = getSelection();
				event.allActions = getActions(selection);
				event.selection = selection;
			}
			
		]]>
	</fx:Script>
	<s:itemRenderer>
		<fx:Component>
			<s:IconItemRenderer width="100%"
								iconFunction="{getIcon}"
								verticalAlign="middle"
								paddingLeft="5"
								creationComplete="item_creationCompleteHandler(event)">
				<fx:Script>
					<![CDATA[
						import mx.events.FlexEvent;
						
						import org.flowerplatform.flex_client.core.CoreConstants;
						import org.flowerplatform.flex_client.core.editor.remote.Node;
						import org.flowerplatform.flexutil.FlexUtilGlobals;

						private function getIcon(data:Node):Object {
							return data.getPropertyValue(CoreConstants.ICONS);
						}
						
						protected function item_creationCompleteHandler(event:FlexEvent):void {
							if (!FlexUtilGlobals.getInstance().isMobile) {
								// only for web
								minHeight = 22;	
							}
						}	
					]]>
				</fx:Script>
			</s:IconItemRenderer>
		</fx:Component>
	</s:itemRenderer> 
</s:List>
