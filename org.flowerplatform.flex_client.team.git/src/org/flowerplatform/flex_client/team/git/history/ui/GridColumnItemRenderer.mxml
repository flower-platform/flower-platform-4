<?xml version="1.0" encoding="utf-8"?>
<!--
@author Vlad Bogdan Manica
-->
<s:GridItemRenderer  xmlns:fx="http://ns.adobe.com/mxml/2009" 
					 xmlns:s="library://ns.adobe.com/flex/spark" 
					 xmlns:mx="library://ns.adobe.com/flex/mx" 
					 clipAndEnableScrolling="true"
					 creationComplete="creationCompleteHandler(event)" >
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			import spark.layouts.VerticalAlign;
			import spark.layouts.VerticalLayout;
			
			import flashx.textLayout.conversion.TextConverter;
			
			import org.flowerplatform.flex_client.core.editor.remote.Node;
			import org.flowerplatform.flex_client.resources.Resources;
			import org.flowerplatform.flex_client.team.git.GitConstants;
			
			override public function set data(value:Object):void {
				if (value != null) {
					var node:Node = Node(value);
					var text:String = "";
					var branches:ArrayCollection = node.getPropertyValue(GitConstants.BRANCHES);
					for (var i:Number = 0; i < branches.length; i++) {
						var textColor:String = String(GitConstants.COLORS.getItemAt(i % (GitConstants.COLORS.length - 1)));
						text += Resources.getMessage("flex_client.team.git.action.history.ui.branchText",[textColor, branches.getItemAt(i)]);
					}
					text += node.getPropertyValue(GitConstants.SHORT_MESSAGE);						
					RichText(labelDisplay).textFlow = TextConverter.importToFlow(text, TextConverter.TEXT_FIELD_HTML_FORMAT);	
				}
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void {
				layout= new VerticalLayout();
				VerticalLayout(layout).verticalAlign = VerticalAlign.MIDDLE;
				VerticalLayout(layout).paddingLeft = 7;
			}
		]]>
	</fx:Script>
	
	<s:RichText id="labelDisplay"/>
	
</s:GridItemRenderer>
