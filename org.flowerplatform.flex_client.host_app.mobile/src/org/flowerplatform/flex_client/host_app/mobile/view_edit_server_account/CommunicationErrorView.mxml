<?xml version="1.0" encoding="utf-8"?>
<!-- 
	license-start
 
	Copyright (C) 2008 - 2013 Crispico Software, <http://www.crispico.com/>.
	
	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation version 3.
	 
	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details, at <http://www.gnu.org/licenses/>.
	
	license-end
-->
<!---
@author Sebastian Solomon
-->
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 creationComplete="creationCompleteHandler(event)"
		 implements="org.flowerplatform.flexutil.view_content_host.IViewContent, mx.managers.IFocusManagerComponent, org.flowerplatform.flexutil.dialog.IDialog">
	<s:layout>
		<s:VerticalLayout gap="0"/>
	</s:layout>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.IList;
			import mx.events.FlexEvent;
			
			import org.flowerplatform.flex_client.host_app.mobile.view_server_account.ServerAccountsViewProvider;
			import org.flowerplatform.flex_client.resources.Resources;
			import org.flowerplatform.flexutil.FlexUtilGlobals;
			import org.flowerplatform.flexutil.action.IAction;
			import org.flowerplatform.flexutil.dialog.IDialogResultHandler;
			import org.flowerplatform.flexutil.view_content_host.IViewHost;
			
			protected var _viewHost:IViewHost;
			
			private var resultHandler:IDialogResultHandler;
			
			protected function creationCompleteHandler(flexvent:FlexEvent):void {
				message.text = Resources.getMessage("mobile.unable.to.connect.toserver.message");
				button.label = Resources.getMessage('mobile.server.accounts.title');
			}
			
			public function setResultHandler(resultHandler:IDialogResultHandler):void {
				this.resultHandler = resultHandler; 
			}
			
			public function set viewHost(value:IViewHost):void {
				_viewHost = value;
			}
			
			public function getActions(selection:IList):Vector.<IAction> {
				return new Vector.<IAction>();
			}
			
			protected function button1_clickHandler(event:MouseEvent):void {
				FlexUtilGlobals.getInstance().popupHandlerFactory.createPopupHandler()				
					.setViewIdInWorkbench(ServerAccountsViewProvider.ID)
					.setTitle(Resources.getMessage("mobile.server.accounts.title"))
					.show();
			}
			
			public function additionalCloseHandler():void {	
				// nothing to do
			}
		]]>
	</fx:Script>
	<s:TextArea id="message" height="100%" width="100%"/>
	<s:HGroup width="100%" horizontalAlign="center" verticalAlign="middle">
		<s:Button id="button" click="button1_clickHandler(event)"/>
	</s:HGroup>
</s:Group>
