<?xml version="1.0" encoding="utf-8"?>
<!-- 
	license-start
 
	Copyright (C) 2008 - 2014 Crispico Software, <http://www.crispico.com/>.
	
	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation version 3.
	 
	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details, at <http://www.gnu.org/licenses/>.
	
	license-end
-->
<!---
@author Sebastian Solomon
-->
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark"
				creationComplete="creationCompleteHandler(event)">
	<s:layout>
		<s:HorizontalLayout verticalAlign="middle"/>
	</s:layout>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			import org.flowerplatform.flex_client.host_app.mobile.view_edit_server_account.EditServerAccountView;
			import org.flowerplatform.flex_client.resources.Resources;
			import org.flowerplatform.flexutil.FlexUtilGlobals;
			
			public var serverAccountView:ServerAccountsView;
			
			protected function creationCompleteHandler(event:FlexEvent):void {
				var text:String = data.user + '@';
				if (data.friendlyName != "") {
					text += data.friendlyName;
				} else {
					text += data.host;
				}
				labelAccount.text = text;
				
				if(data.isDefault) {
					checkBox.selected = true;
				}
			}
			
			protected function checkboxClickHandler(event:MouseEvent):void {
				if (serverAccountView.getResultHandler() is MainMobile) {
					serverAccountView.getResultHandler().handleDialogResult(data);
					serverAccountView.closeView();
				}
				var accountList:ArrayCollection = serverAccountView.deselectDefaultAccount();				
				if (checkBox.selected) { // set default value
					setThisAsDefaultAccount();
				}
			}
			
			private function setThisAsDefaultAccount():void {
				var serverAccount:ServerAccount = new ServerAccount();
				data.isDefault = true;
				serverAccount.setData(data);
				serverAccountView.setDefaultAccount(data)
			}
			
			protected function labelClickHandler(event:MouseEvent=null):void {
				if (serverAccountView.getResultHandler() is MainMobile) {
					setThisAsDefaultAccount();
					serverAccountView.getResultHandler().handleDialogResult(data);
					serverAccountView.closeView();
				} else {
					var editAccountView:EditServerAccountView = new EditServerAccountView();
					var serverAccount:ServerAccount = new ServerAccount();
					
					serverAccount.setData(data);
					editAccountView.setServerAccount(serverAccount);
					editAccountView.setServerAccountView(serverAccountView);
						
					FlexUtilGlobals.getInstance().popupHandlerFactory.createPopupHandler()
						.setTitle(Resources.getMessage("mobile.edit.server.account.title"))
						.setViewContent(editAccountView)
						.show();
				}
			}
		]]>
	</fx:Script>
	<s:CheckBox id="checkBox" click="checkboxClickHandler(event)"/>
	<s:Label id="labelAccount" click="labelClickHandler(event) "/>
	
</s:ItemRenderer>