#######################################
# core
#######################################

spinner.initialize = Initializing ...

select.all = Select All
deselect.all = Deselect All

info = Info
error = Error

action.new.label = New {0}
action.open.with = Open with

action.remove = Remove

action.rename = Rename
renderer.preview = Preview:

editor.action.open = Open
editor.action.openNodeTree = Open Node Tree
editor.error.subscribe.title = Subscription Error
editor.error.subscribe.message = There was a problem opening the resources: {0}.
editor.openInNewEditor.title = Open in New Editor
editor.openInNewEditor.message = Open in new editor?
editor.openInNewEditor.remember = Remember this setting

menu.navigate = Navigate
menu.file = File
menu.tools = Tools

menu.debug = Debug

menu.help = Help

asign.hotkey.action.label = Assign hot key
shortcut.already.used = This shortcut is currently assigned to\n {0}\nReplace this assignment?
shortcut.action.click = Click on any action to assign shortcut.
shortcut.enter = Enter new shortcut

link.title = Get/Follow Link
link.option.to = 1) Get a link to:
link.to.current.editor = a) current editor
link.to.all.editors = b) all editors
link.option.follow = 2) Or, paste link and follow it:
link.follow = Follow
link.copy.clipboard = Copy to Clipboard
link.copied = Copied!

open.node.action.label = Open Node
open.node.view.label.text = Node:
open.root.action.label = Open Root

iframe.title = Open URL in IFrame 

about.flower.action.label = About Flower Platform
about.app.version.label = Client Application Version:
about.server.app.version.label = Server Application Version:
about.api.version.label = API Version:

save.action.label = Save
saveAll.action.label = Save All
save.title = Save Resource(s)
save.singleResourceNode.message = '{0}' has been modified. Save changes?
save.multipleResourceNodes.label = Select the resources to save:

reload.action.label = Reload
reload.title = Reload Resource(s)
reload.multipleResourceNodes.label = Select the resources to reload:

reconnect = Reconnect
# {0} - last update timestamp of client, {1} - last update timestamp of server
reconnect.message = The connection with the server has been lost.\nLast successful communication was at\:\n{0} (local time)\n{1} (server time).
# {0} - reconnect interval
reconnect.automatic = Automatically trying to reconnect each {0} seconds.

file.fileSystem = File System
file.name = Name
file.size = File size
file.is.directory = Is directory
file.creation.time = Created
file.modified.time = Modified
file.accessed.time = Accessed
file.folder = File/Folder

action.download = Download
download.zip = A Zip archive will be created containing selected resources!

action.upload = Upload
upload.make.archive = You will upload a ZIP file. Do you want to unzip it in selected directory?
upload.progress = Uploading {0}%
upload.file = File/ZIP archive to upload:
upload.browse = Browse...
upload.limit.max = Max. 100 MB per file
upload.label = Upload

resource.error.invalidScheme = No resource handler registered for scheme: {0}

virtual.error.invalidUri = Invalid virtual node URI {0}
virtual.error.unknownType = Unknown type {0} for node URI {1}

#######################################
# core
#######################################

# node types
fileNode.label = File/Folder

# node properties
fileNode.name.label = Name
fileNode.isDirectory.label = Is directory
fileNode.size.label = File size
fileNode.creationTime.label = Created
fileNode.lastModifiedTime.label = Modified
fileNode.lastAccessTime.label = Accessed

commandStack.command.setProperty = Set {0} = {1}
commandStack.command.setProperties = Set {0} multiple properties
commandStack.command.unsetProperty = Unset {0}
commandStack.command.addChild = Create {0}
commandStack.command.removeChild = Remove {0}
 
#######################################
# node tree view
#######################################

nodeTree.view = Node Tree

#######################################
# properties
#######################################

properties.emptySelection = No element selected
properties.view = Properties
properties.action.show = Properties
properties.internal.show = Show Internal Properties
properties.uriTypeGroup = Uri / Type
properties.uri = Uri
properties.type = Type

properties.menu.debug.newArbitraryNode = New Node (Arbitrary Type)
properties.menu.debug.newArbitraryNode.title = Enter Node Type (CAUTION!)
properties.menu.debug.newArbitraryNode.noType = Please select a type!
properties.menu.debug.newArbitraryNode.noSuchType = No such type found in registry!

action.new = New
action.newSibling = New Sibling
field_required_title = Field required
field_is_mandatory_message = field is mandatory

edit_note_in_dialog_label = Edit note in dialog
note_title = Note

edit_node_details_in_dialog_label = Edit node details in dialog
node_details_title = Node details

change = Change
default = Default
used = Used

preference.copy.to.user = Copy to User
preference.copy.to.global = Copy to Global


preferences.view = Preferences
preferences.action.show = Preferences

#######################################
# mindmap
#######################################

# node types
freeplaneNode.label = Node

# node properties
freeplaneNode.styleName.label = Style
freeplaneNode.icons.label = Icons
freeplaneNode.colorText.label = Text
freeplaneNode.colorBackground.label = Background
freeplaneNode.fontFamily.label = Font family
freeplaneNode.fontSize.label = Font size
freeplaneNode.fontBold.label = Bold
freeplaneNode.fontItalic.label = Italic
freeplaneNode.minWidth.label = Minimum node width
freeplaneNode.maxWidth.label = Maximum node width
freeplaneNode.edgeWidth.label = Edge width
freeplaneNode.edgeStyle.label = Edge style
freeplaneNode.edgeColor.label = Edge color
freeplaneNode.cloudColor.label = Cloud color
freeplaneNode.cloudShape.label = Cloud shape

mindmap.font = Font
mindmap.color = Color
mindmap.edges = Edges
mindmap.cloud = Clouds

mindmap.edge.smoothly.curved = Smoothly curved (bezier)
mindmap.edge.hide = Hide edge
mindmap.edge.horizontal = Horizontal
mindmap.edge.linear = Linear
mindmap.edge.sharp.linear = Sharp linear
mindmap.edge.sharply.curved = Sharply curved (bezier)

mindmap.shape.none = None
mindmap.shape.rectangle = Rectangle
mindmap.shape.roundRectangle = Round Rectangle
mindmap.shape.arc = Arc
mindmap.shape.star= Star

nodeShape = Node shape

manageIcons.action.label = Manage Icons
manageIcons.remove.all.label = Remove All
manageIcons.remove.first.label = Remove First
manageIcons.remove.last.label = Remove Last

mindmap.action.refresh = Refresh

mindmap.style.name = Style

mindmap.up = Up
mindmap.down = Down
mindmap.left = Left
mindmap.right = Right
mindmap.pagedown = Page Down
mindmap.pageup = Page Up
mindmap.navigate.action.append = {0} (+) 

mindmap.edit.node.core = Edit node core in dialog

mindmap.create.note = <b>Note:</b> Add <b>.mm</b> extension to create a Freeplane mind map.

mindmap.custom_icons.path = {0}/mindmap_icons
mindmap.custom_icons.info = <b>Note</b>: Upload custom icons in <b>'{0}'</b><br>(only '*.png' with 16x16 are accepted).

mindmap.editor.showPropertiesInRenderer = Show Properties in Node
mindmap.editor.showPropertiesInRenderer.none = None
mindmap.editor.showPropertiesInRenderer.descriptor = Preconfigured Types
mindmap.editor.showPropertiesInRenderer.descriptor.internal = Preconfigured Types (incl. Internal Properties)
mindmap.editor.showPropertiesInRenderer.all = All Types
mindmap.editor.showPropertiesInRenderer.all.internal = All Types (incl. Internal Properties)

#######################################
# codesync
#######################################

# node properties
match.icons.label = Icons
match.matchType.label = Match Type
match.feature.label = Feature
match.modelElementType.label = Model Element Type
match.childrenModifiedLeft.label = Children Modified (Left)
match.childrenModifiedRight.label = Children Modified (Right)
match.childrenConflict.label = Children Conflict
match.diffsModifiedLeft.label = Diffs Modified (Left)
match.diffsModifiedRight.label = Diffs Modified (Right)
match.diffsConflict.label = Diffs Conflict
match.bodyModified.label = Body Modified

codeSyncRoot.baseDir.label = Base Directory

codesync.action.synchronize = Synchronize
codesync.action.markRemoved = Mark Removed

category.codesync.name.label = Name

srcDir.technologies.label = Technologies

#######################################
# codesync.java
#######################################

codeSyncRoot.templatesDirs.label = Templates Path

#######################################
# codesync.java
#######################################

# node types
codesyncFolder.label = Package
codesyncFile.label = File
javaAnnotation.label = Annotation
javaAnnotationType.label = Annotation
javaAttribute.label = Field
javaClass.label = Class
javaEnum.label = Enum
javaEnumConstant.label = Enum Constant
javaEnumConstantArgument.label = Enum Constant Argument
javaInterface.label = Interface
javaModifier.label = Modifier
javaOperation.label = Method
javaParameter.label = Parameter
javaSuperInterface.label = Super Interface


#######################################
# codesync.sdiff
#######################################

# node types
sdiffComment.label = Comment

codesync.sdiff.structureDiff = Structure Diff

codesync.sdiff.error.cannotParsePatch = Cannot parse patch
codesync.sdiff.error.noFileDiffs = No file diffs detected

codesync.sdiff.action.createSdiffFromWorkspaceAndPatch = Create Structure Diff from Workspace and Patch
codesync.sdiff.createSdiff.loadPatchFromFile = Load Patch from File
codesync.sdiff.createSdiff.fileName = File Name

codesync.sdiff.newlyAddedElement = Newly Added Element
codesync.sdiff.deletedElement = Deleted element
codesync.sdiff.modifiedElementStructure = Modified element: only the structure (e.g. visibility of a method) 
codesync.sdiff.modifiedElementBody = Modified element: body (e.g. body of a method)
codesync.sdiff.modifiedChildren = Children are modified: the element is not modified; but one of its children is modified 
codesync.sdiff.commentAdded = Comment  

codesync.sdiff.fileNameLabelText = |{0}
codesync.sdiff.outputSdiffPath = sdiffs/{0}.sdiff

#######################################
# web
#######################################

flower.perspective = Flower Perspective

version.error = Client/Server Version Error
version.error.message = A client application with version \= {0} tries to connect to a server application with version \= {1}.\n {2}
version.error.details = Please try the following actions\:\n\n* Refresh this web page (i.e. using Refresh/Reload button of your browser)\n* Clear the cache of your browser and refresh this page\n* If the problem persists and you are behind a proxy that caches pages, please contact your network administrator.

version.plugin.error = Plugin's version is old.\n {0}
#######################################
# mobile
#######################################

mobile.server.accounts.title = Server Accounts
mobile.select.server.account.title = Select default Server Account
mobile.edit.server.account.title = Edit Server Account
mobile.field.required.title = Field required
mobile.delete.account.title = Delete account
mobile.select.default.account.message = Please select a default Server Account
mobile.no.default.account.message = No Default Server Account
mobile.make.this.account.default.message = Would you like to make this server account the default one?
mobile.host.field.is.mandatory.message = Host field is mandatory
mobile.confirm.delete.account.message = Are you sure you want to delete account
mobile.create.server.account.message = Please create a new server account
mobile.add.server.account.label = Add Server Account
mobile.remove.server.account.label = Remove Server Account
mobile.open.accounts.label = Open Accounts
mobile.unable.to.connect.toserver.message = Unable to connect to server. Please try the following actions\:\n\n* verify Server Account data and restart aplication\n* verify internet connection
mobile.host.invalid = Invalid Flower Platform host!

#######################################
# CodeSync Regex
#######################################

# node types
regex.label = RegEx
regexMacro.label = Macro

# node properties
category.regex.name.label = Name
category.regex.regex.label = RegEx
category.regex.fullRegex.label = RegEx (w/o macros)
regex.name.label = Name
regex.regex.label = RegEx
regex.fullRegex.label = RegEx (w/o macros)
regex.action.label = Action
regexMacro.name.label = Name
regexMacro.regex.label = RegEx
regexMacro.fullRegex.label = RegEx (w/o macros)
regexMatch.name.label = Name
regexMatch.fullRegex.label = RegEx (w/o macros)
regexMatch.start.label = Start
regexMatch.end.label = End
regexVirtual.name.label = Name
regexVirtual.fullRegex.label = RegEx (w/o macros)

regex.action = Action

regexes.root = RegExes

regex.generate = Generate Matches

regex.value = Value
regex.start = Start
regex.end = End

regex.action.grouped = Show Matches Grouped by RegEx
regex.action.ordered = Show Matches as Ordered List
regexMatches.root = Matches

regex.generateMatches.noFileOpen = Please open at least one file before starting to generate matches!
regex.generateMatches.title = Generate Matches for File

regex.showTextEditor = Show Text Editor
regex.showTextEditorInRight = {0} in Right
regex.file = File:
regex.default.file = temp-{0}

regex.fileNameLabelText = /{0}
regex.location = regex/{0}.regexMatches

#######################################
# team.git
#######################################

#node properties
category.gitRef.name.label = Name
category.gitRef.fullName.label = Full Name
category.gitRef.commitID.label = Commit ID
category.gitRef.commitMessage.label = Commit Message
category.gitRef.isCheckedOut.label = Is Checkout
category.gitRef.configUpstreamBranch.label = Config Upstream Branch
category.gitRef.configRemote.label = Config Remote
category.gitRef.configRebase.label = Config Rebase
gitLocalBranch.name.label = Name
gitLocalBranch.fullName.label = Full Name
gitLocalBranch.commitID.label = Commit ID
gitLocalBranch.commitMessage.label = Commit Message
gitLocalBranch.isCheckedOut.label = Is Checkout
gitLocalBranch.configUpstreamBranch.label = Config Upstream Branch
gitLocalBranch.configRemote.label = Config Remote
gitLocalBranch.configRebase.label = Config Rebase
gitLocalBranches.name.label = Name
gitRemote.name.label = Name
gitRemote.fetchRefSpecs.label = Fetch Ref Specs
gitRemote.pushRefSpecs.label = Push Ref Specs
gitRemote.URIs.label = URIs
gitRemoteBranch.name.label = Name
gitRemoteBranch.fullName.label = Full Name
gitRemoteBranch.commitID.label = Commit ID
gitRemoteBranch.commitMessage.label = Commit Message
gitRemoteBranch.isCheckedOut.label = Is Checkout
gitRemoteBranch.configUpstreamBranch.label = Config Upstream Branch
gitRemoteBranch.configRemote.label = Config Remote
gitRemoteBranch.configRebase.label = Config Rebase
gitRemoteBranches.name.label = Name
gitRemotes.name.label = Name
gitRepo.name.label = Name
gitRepo.currentBranch.label = Current Branch
gitRepo.currentCommit.label = Current Commit
gitTag.name.label = Name
gitTag.fullName.label = Full Name
gitTag.commitID.label = Commit ID
gitTag.commitMessage.label = Commit Message
gitTag.isCheckedOut.label = Is Checkout
gitTag.configUpstreamBranch.label = Config Upstream Branch
gitTag.configRemote.label = Config Remote
gitTag.configRebase.label = Config Rebase
gitTags.name.label = Name

flex_client.team.git.action.history.ui.Repository = Repository: {0}
flex_client.team.git.action.history.ui.historyTextArea = commit {0} \nAuthor\: {1} {2}\nCommitter\: {3} {4}\n{5}{6}Branches\:{7}{8}\n\n<b>{9}</b>
flex_client.team.git.action.history.ui.parents = Parent\: {0} ({1})\n
flex_client.team.git.action.history.ui.children = Child\: {0} ({1})\n
flex_client.team.git.action.history.ui.tags = \nTags\: {0}.
flex_client.team.git.action.history.ui.linkFormat = <u><font color='#0000FF'><a href='event:{0}'>{0}</a></font></u>
flex_client.team.git.action.history.ui.branchText = <b><font color="{0}">{1}</font></b> 
flex_client.team.git.action.history.ui.labelId = Id 
flex_client.team.git.action.history.ui.labelMessage = Message
flex_client.team.git.action.history.ui.labelAuthor = Author
flex_client.team.git.action.history.ui.labelAuthoredDate = Authored Date
flex_client.team.git.action.history.ui.labelCommitter = Committer
flex_client.team.git.action.history.ui.labelCommittedDate = Committed Date

flex_client.team.git.action.renameBranch = Rename Branch...

team.git.action.DeleteBranchAction = Delete Branch
team.git.action.DeleteBranchDialog = You are about to delete the branch. Are you sure?
#######################################

flex_client.team.git.action.history.ui.history1 = commit {0} \nAuthor\: {1} {2} {3}\nCommitter\:{4} {5} {6}\n
flex_client.team.git.action.history.ui.history2 = Parent\: {0} {1}\n
flex_client.team.git.action.history.ui.history3 = Child\: {0} ({1})\n
flex_client.team.git.action.history.ui.history4 = \n{0}\n

flex_client.team.git.action.mergeBranch = Merge
flex_client.team.git.action.mergeBranch.label = Merge...
flex_client.team.git.mergeBranch.mergeOptions = Merge options:
flex_client.team.git.mergeBranch.fastForwardOptions = Fast forward options:
flex_client.team.git.mergeBranch.commit = Commit (commit the result)
flex_client.team.git.mergeBranch.noCommit = No commit (prepare merge commit, but don't commit yet)
flex_client.team.git.mergeBranch.squash = Squash (merge changes into working directory, but don't create merge commit)
flex_client.team.git.mergeBranch.fastForwardCommit = If a fast-forward, create a merge commit
flex_client.team.git.mergeBranch.fastForwardUpdate = If a fast-forward, only update the branch pointer
flex_client.team.git.mergeBranch.noFastForward = If not a fast-forward, fail
flex_client.team.git.mergeBranch.alert = You must select a branch or tag to merge into the '{0}' branch !

flex_client.team.git.action.createSdiffFromGitCommits = Create Structure Diff from Git Commits

flex_client.team.git.action.checkoutAction = Checkout
flex_client.team.git.action.commitChanges = Commit Changes
flex_client.team.git.action.Reset = Reset
flex_client.team.git.action.Cancel = Cancel
flex_client.team.git.action.Yes = Yes
flex_client.team.git.action.No = No
flex_client.team.git.action.checkout.popup = Do you really want to checkout '{0}' ?
checkout.uncommitedPopup = Current branch has uncommitted changes.

flex_client.team.git.action.checkout.remote = This branch is remote. If you want to work on the branch, a new local branch has to be created and checked out. If you just want to have a look at the state of the branch, the commit of the remote-tracking branch can be checked out.
flex_client.team.git.action.CreateNewBranch = Create new branch
flex_client.team.git.action.CheckoutCommit = Checkout Commit

team.git.action.deleteBranch.action = Delete Branch
team.git.action.deleteTag.action = Delete Tag
team.git.action.deleteBranch.message = Are you sure you want to delete '{0}'?

flex_client.team.git.action.deleteGitRepository = Delete repository
flex_client.team.git.action.deleteGitRepositoryLabel = This will delete repository '{0}', do you want to continue?

flex_client.team.git.ui.keepWorkingDirectoryContent = Keep working directory content (only .git folder will be deleted)

flex_client.team.git.createSdiff.startHash = Start commit (hash or expression)
flex_client.team.git.createSdiff.endHash = End commit (hash or expression)
flex_client.team.git.createSdiff.getInfo = Get info

flex_client.team.git.createSdiff.defaultState = Please input a commit and press Get Info
flex_client.team.git.createSdiff.invalidState = The value is not valid

flex_client.team.git.action.createBranch = Create Branch...
flex_client.team.git.ui.source = Source:
flex_client.team.git.ui.branchName = Branch Name:
flex_client.team.git.ui.configureUpstreamForPushAndPull = Configure upstream for push and pull

flex_client.team.git.ui.whenDoingAPull = When doing a pull
flex_client.team.git.ui.mergeUpstreamCommitsIntoLocalBranch = Merge upstream commits into local branch

flex_client.team.git.ui.rebaseCommitsOfLocalBranchOntoUpstream = Rebase commits of local branch onto upstream
flex_client.team.git.action.configureBranch = Configure Branch...
flex_client.team.git.ui.configureBranchView.remote = Remote:

flex_client.team.git.action.rebase = Rebase...
flex_client.team.git.action.rebase.view.label = Rebase to
flex_client.team.git.action.rebaseFailed = Rebase failed
flex_client.team.git.ui.rebase.result = Rebase result
flex_client.team.git.ui.renameBranchView.newBranchName = New branch name:
flex_client.team.git.ui.renameBranchView.alert = Please enter a name for the new branch!
flex_client.team.git.ui.renameBranchView.error = error

flex_client.team.git.ui.configureBranchView.upstream = Upstream branch:
flex_client.team.git.ui.configureBranchView.rebase = Rebase

flex_client.team.git.ui.checkoutNewBranch = Checkout new branch

flex_client.team.git.ui.loginView.username = Username
flex_client.team.git.ui.loginView.password = Password
flex_client.team.git.ui.loginView.repository = Repository

flex_client.team.git.action.changeCredentials.label = Change Credentials...

git.git = Git
git.localBranches = Local Branches
git.remoteBranches = Remote Branches

git.tags = Tags
git.remotes = Remotes
gitHistory.view = Git History
gitHistory.action.show = Git History

gitHistory.action.CopyId = Copy Id

flex_client.team.git.ui.component.configureFetchPush.refMappings = Ref Mappings
flex_client.team.git.ui.component.configureFetchPush.addButton = Add
flex_client.team.git.ui.component.configureFetchPush.editButton = Edit
flex_client.team.git.ui.component.configureFetchPush.deleteButton = Delete
flex_client.team.git.ui.component.configureFetchPush.title = Configure {0}
flex_client.team.git.ui.component.configureFetchPush.URI = URI:
flex_client.team.git.ui.component.configureFetchPush.description = Configure / select refs for {0}.

flex_client.team.git.ui.EditRefSpec.title = Create/Edit a Refspec
flex_client.team.git.ui.EditRefSpec.refSpec = Refspec:
flex_client.team.git.ui.EditRefSpec.hint = The format of a refspec is\:\n
flex_client.team.git.ui.ConfigureRemoteView.configurePush = Configure Push
flex_client.team.git.ui.ConfigureRemoteView.remoteName = Remote Name:

flex_client.team.git.ui.ConfigureRemoteAction.createRemote = Create Remote
flex_client.team.git.ui.ConfigureRemoteAction.configureRemote = Configure Remote

flex_client.team.git.ui.ConfigureRemoteAction.firstPageTitle = Remote name and URI

flex_client.team.git.ui.FetchAction.fetchOnGit = Fetch...
flex_client.team.git.ui.FetchAction.fetchOnRemote = Fetch
flex_client.team.git.ui.FetchView.fetchResult = Fetch Result Info

flex_client.team.git.action.Push.pushOnGit = Push...
flex_client.team.git.action.Push.pushOnRemote = Push
flex_client.team.git.ui.Push.errorMessage = You must enter URI!
flex_client.team.git.ui.Push.pushResult = Push Result Info
flex_client.team.git.FetchPush.error = There must be at least one RefSpec!

flex_client.team.git.action.DeleteRemoteAction.deleteRemote = Delete Remote
flex_client.team.git.action.DeleteRemoteAction.confirmDelete = Are you sure you want to delete remote configuration '{0}'?

team.git.action.GitStagingAction = Git Staging
team.git.action.AddToGitIndex = Add To Git Index
team.git.action.RemoveFromGitIndex = Remove From Git Index

git.cloneRepo.title = Clone Git Repository
git.cloneRepo.branches.title = Clone branches
git.cloneRepo.branches.description = Select branches to clone from the remote repository.
git.spinner.cloneRepo = Cloning repository... please wait

git.error.transportOperation = Error sending request. Please try again.
git.error.URIParse = Given URI could not be parsed.
git.error.invalidRemote = Invalid remote.
git.error.location.not.empty = Destination path is not an empty directory. Please choose an empty location.

git.selectRepo.title = Select Git repository
git.selectRepo.description = Please enter the location of the source repository.
git.selectRepo.remote = Remote
git.selectRepo.uri = URI
git.selectRepo.badUri = Please enter a valid URI.
git.selectRepo.existentRepo = A Git Repository with the same name already exists!

git.error = An error occured. Please try again.
git.filter = type filter text

git.name = Name
git.fullName = Full Name
git.configRemote = Config Remote
git.configUpstreamBranch = Config Upstream Branch
git.configRebase = Config Rebase
git.currentBranch = Current Branch
git.currentCommit = Current Commit
git.isCheckout = Checked out
git.fetchRefSpecs = Fetch Ref Specs
git.pushRefSpecs = Push Ref Specs
git.remoteURIs = URIs
git.commitID = Commit ID
git.commitMessage = Commit Message

flex_client.team.git.action.reset = Reset...
flex_client.team.git.ui.resetView.reset = Reset to (expression):
flex_client.team.git.ui.resetView.resetType = Reset type:
flex_client.team.git.ui.resetView.soft = Soft (HEAD updated)
flex_client.team.git.ui.resetView.mixed = Mixed (HEAD and index updated)
flex_client.team.git.ui.resetView.hard = Hard (HEAD, index and working directory updated)
gitHistory.action.Checkout = Checkout
gitHistory.action.Reset = Reset

team.git.Repository = Repository:
team.git.Refresh = Refresh
team.git.RefreshFromSelection = Refresh from Selection
team.git.Amend = Amend Previous Commit
team.git.Unstaged = UnstagedChanges
team.git.Staged = Staged Changes
team.git.Author = Author
team.git.Committer = Committer
team.git.CommitPush = Commit and Push
team.git.showCommentArea = Show Comment
team.git.showFilesArea = Show Files

flex_client.team.git.history.action.cherryPick = Cherry Pick
team.git.history.cherryPick.null = The change has already been included
team.git.history.cherryPick.conflicts = Cherry pick could not be completed automatically because of conflicts. Please resolve and commit.
team.git.history.cherryPick.fail = Cherry pick failed.
team.git.history.cherryPick.ok = Cherry pick succesfully completed.

flex_client.team.git.history.action.revertCommit = Revert commit
team.git.history.revert.alreadyReverted.message = The change has already been reverted

flex_client.team.git.action.createTag = Create Tag...
flex_client.team.git.ui.CreateTagAction.tagName = Tag Name:
flex_client.team.git.ui.CreateTagAction.tagMessage = Tag Message:
flex_client.team.git.ui.CreateTagAction.associateTag = Associate tag with (expression):
flex_client.team.git.ui.CreateTagAction.forceReplace = Force replace existing tag
