<?xml version="1.0" encoding="utf-8"?>
<!-- 
	license-start
 
	Copyright (C) 2008 - 2013 Crispico Software, <http://www.crispico.com/>.
	
	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation version 3.
	 
	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details, at <http://www.gnu.org/licenses/>.
	
	license-end
-->
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="400" height="300"  creationComplete="init();"
		 implements="org.flowerplatform.flexutil.samples.object_proxy.INodeChangedListener">
	
	<fx:Script>
		<![CDATA[
		import mx.events.PropertyChangeEvent;
		import mx.utils.ObjectProxy;
		
		private var object:Object = {};
		private var objectProxy:ObjectProxy;
		
		include "jsFile.js";
			
		private function init():void {
			objectProxy = new ObjectProxy(object);
			objectProxy.addEventListener(PropertyChangeEvent.PROPERTY_CHANGE, updateChange);
			objectProxy.name = "Node";
			objectProxy.id = 31;
			
			/* Note: Any assignments made directly to the "object"
			Object do not dispatch the propertyChange event. */
			object.hasChildren = false;
			object.id = 33;
			
			/* Note: Even though the earlier assignment to the "id"
			property  didn't dispatch the propertyChange event,
			the "oldValue" property is still displayed as 33. */
			objectProxy.id = 45;
						
			var node:Object = new Object();
			node.type = "myType";
			node.nodeUri = "myNodeUri";
			trace(nodeRegistry.registerNode(node));
			
			nodeRegistry.addListener(this);
			nodeRegistry.setType(node, "MyOtherType");
			
//			var fOld:Function = nodeRegistry.registerNode;
//			nodeRegistry.registerNode = function(node:Object):String {
//				return "Override: " + fOld(node);
//			};
			
			trace(nodeRegistry.registerNode(node));		
		}
		
		private function updateChange(evt:PropertyChangeEvent):void {
			arrColl.addItem(evt);
		}
			
		public function nodeChanged(node:Object):void {
			trace("nodeChanged " + node.type);
		}			
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:ArrayCollection id="arrColl" />
		
	</fx:Declarations>
	
	<s:DataGrid dataProvider="{arrColl}"
				 sortableColumns="false"
				 draggableColumns="false"
				 width="100%"
				 height="100%">
		<s:columns>
			<s:ArrayList>
				<s:GridColumn dataField="type" />
				<s:GridColumn dataField="property" />
				<s:GridColumn dataField="newValue" />
				<s:GridColumn dataField="oldValue" />
				<s:GridColumn dataField="source" />
			</s:ArrayList>
		</s:columns>
	</s:DataGrid>
	
</s:Group>