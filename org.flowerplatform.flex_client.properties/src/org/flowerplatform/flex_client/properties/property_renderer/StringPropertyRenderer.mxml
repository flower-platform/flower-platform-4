<?xml version="1.0" encoding="utf-8"?>
<ns:BasicPropertyRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
						  xmlns:s="library://ns.adobe.com/flex/spark" 
						  xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:ns="org.flowerplatform.flex_client.properties.property_renderer.*" 
						  creationComplete="creationCompleteHandler(event)">
	
	<fx:Script>
		<![CDATA[
			import mx.binding.utils.BindingUtils;
			import mx.events.FlexEvent;
			
			import org.flowerplatform.flex_client.core.CorePlugin;
			import org.flowerplatform.flex_client.core.mindmap.remote.Node;
			import org.flowerplatform.flex_client.properties.PropertiesPlugin;
						
			override protected function getValue():Object {
				return propertyValue.text;	
			}
			
			override protected function keyHandler(event:KeyboardEvent):void {
//				if (propertyValue.editable == true) {
//					changeCheckBox.selected = true;
//					changeCheckBox.enabled = true;
//				}
				super.keyHandler(event);
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void {
				BindingUtils.bindProperty(data, "value", propertyValue, "text");
			}
			
			protected function propertyValue_focusOutHandler(event:FocusEvent):void {
				saveProperty(null);
			}
			
			
			protected function changeClickHandler(event:MouseEvent):void {
				//TODO move in super
				
				saveProperty(null);
//				changeCheckBox.selected = false;
//				changeCheckBox.enabled = false;
				
				//unset
				CorePlugin.getInstance().serviceLocator.invoke(
					"nodeService.unsetProperty", 
					[Node(PropertiesPlugin.getInstance().currentSelection.getItemAt(0)).fullNodeId, data.name]);
			}
			
		]]>
	</fx:Script>
	
	<s:TextInput id="propertyValue"  width="100%" height="100%"
				 text="{data.value}"
				 editable="{!data.readOnly}" 
				 focusOut="propertyValue_focusOutHandler(event)"
				 keyUp="keyHandler(event)"/>
	
	<s:CheckBox id="changeCheckBox" 
				visible="{data.hasChangeCheckbox}"
				click="changeClickHandler(event)"
				
				selected="{data.value != data.defaultValue}"
				enabled="{data.value != data.defaultValue}"/>
	
	<s:Label id="changeLabel" paddingTop="5"
			 text="Change"
			 visible="{data.hasChangeCheckbox}"/>
	
	
</ns:BasicPropertyRenderer>
