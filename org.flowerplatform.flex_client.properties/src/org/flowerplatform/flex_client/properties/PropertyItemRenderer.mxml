<?xml version="1.0" encoding="utf-8"?>
<!-- 
	license-start
 
	Copyright (C) 2008 - 2013 Crispico Software, <http://www.crispico.com/>.
	
	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation version 3.
	 
	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details, at <http://www.gnu.org/licenses/>.
	
	license-end
-->
<!---
@author Sebastian Solomon
-->
<s:FormItem xmlns:fx="http://ns.adobe.com/mxml/2009"
				   xmlns:s="library://ns.adobe.com/flex/spark"
				   xmlns:mx="library://ns.adobe.com/flex/mx"
				   implements="mx.core.IDataRenderer, mx.managers.IFocusManagerComponent"
				   creationComplete="creationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			
			import org.flowerplatform.flex_client.properties.property_renderer.BasicPropertyRenderer;
			import org.flowerplatform.flex_client.properties.remote.PropertyDescriptor;
			import org.flowerplatform.flexutil.FactoryWithInitialization;
						
			public var savePropertyEnabled:Boolean = true;
			public var basicPropertyRendererType:String;
			
			// Internal variable for the property value.
			private var _data:Object;
							
			private var basicPropertyRenderer:BasicPropertyRenderer;
			
			public function get data():Object {
				return _data;
			}
						
			public function get propertyDescriptor():PropertyDescriptor {
				return PropertyDescriptor(data);
			}
			
			public function set data(value:Object):void {
				// data being bindable, whenenver it changes it enters here and loses all past informations
				// by checkig this, we make sure that the past event doesn't happen
				if (_data == value) {
					return;
				}
				_data = value;
				
				if (_data == null) {
					return;
				}			
				
				// use title as label if set
				this.label = propertyDescriptor.title != null ? propertyDescriptor.title : propertyDescriptor.name;
								
				basicPropertyRenderer.data = propertyDescriptor;
			}

			protected function creationCompleteHandler(event:FlexEvent):void {				
				UIComponent(labelDisplay).setStyle("fontWeight", "normal");				
			}						
			
			override protected function createChildren():void {				
				super.createChildren();
				
				var factory:FactoryWithInitialization = FactoryWithInitialization(PropertiesPlugin.getInstance().propertyRendererClasses[basicPropertyRendererType]);
				basicPropertyRenderer = factory.newInstance(false);
				basicPropertyRenderer.percentWidth = 100;
				basicPropertyRenderer.percentHeight = 100;
				basicPropertyRenderer.savePropertyEnabled = savePropertyEnabled;	
				this.addElement(basicPropertyRenderer);				
			}			
			
		]]>
	</fx:Script>
</s:FormItem>