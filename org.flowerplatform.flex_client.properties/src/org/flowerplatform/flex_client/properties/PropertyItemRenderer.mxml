<?xml version="1.0" encoding="utf-8"?>
<!---
@author Sebastian Solomon
-->
<s:FormItem xmlns:fx="http://ns.adobe.com/mxml/2009"
				   xmlns:s="library://ns.adobe.com/flex/spark"
				   xmlns:mx="library://ns.adobe.com/flex/mx"
				   implements="mx.core.IDataRenderer, mx.managers.IFocusManagerComponent"
				   creationComplete="creationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			
			import org.flowerplatform.flex_client.properties.property_renderer.BasicPropertyRenderer;
			import org.flowerplatform.flex_client.properties.remote.PropertyDescriptor;
			import org.flowerplatform.flexutil.FactoryWithInitialization;
						
			public var savePropertyEnabled:Boolean = true;
			
			// Internal variable for the property value.
			private var _data:Object;
										
			public function get data():Object {
				return _data;
			}
						
			public function get propertyDescriptor():PropertyDescriptor {
				return PropertyDescriptor(data);
			}
			
			public function set data(value:Object):void {
				// data being bindable, whenenver it changes it enters here and loses all past informations
				// by checkig this, we make sure that the past event doesn't happen
				if (_data == value) {
					return;
				}
				_data = value;
				
				if (_data == null) {
					return;
				}			
				
				// use title as label if set
				this.label = propertyDescriptor.title != null ? propertyDescriptor.title : propertyDescriptor.name;
				
				var factory:FactoryWithInitialization = FactoryWithInitialization(PropertiesPlugin.getInstance().propertyRendererClasses[propertyDescriptor.type]);
				var itemRenderedInstance:BasicPropertyRenderer = factory.newInstance(false);
				itemRenderedInstance.percentWidth = 100;
				itemRenderedInstance.percentHeight = 100;
				itemRenderedInstance.savePropertyEnabled = savePropertyEnabled;	
				this.addElement(itemRenderedInstance);
				
				itemRenderedInstance.data = propertyDescriptor;
			}

			protected function creationCompleteHandler(event:FlexEvent):void {				
				UIComponent(labelDisplay).setStyle("fontWeight", "normal");				
			}			
			
		]]>
	</fx:Script>
</s:FormItem>
