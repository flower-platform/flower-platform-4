<?xml version="1.0" encoding="utf-8"?>
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009"
				   xmlns:s="library://ns.adobe.com/flex/spark"
				   xmlns:mx="library://ns.adobe.com/flex/mx"
				   borderColor="#696969" borderVisible="true" borderWeight="1"
				   implements="mx.core.IDataRenderer, mx.managers.IFocusManagerComponent">
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import org.flowerplatform.flex_client.properties.property_renderer.BasicPropertyRenderer;
			import org.flowerplatform.flexutil.FactoryWithInitialization;

			
			public var itemRenderer:Class;
			public var itemRenderedInstance:BasicPropertyRenderer;
			// Internal variable for the property value.
			private var _data:Object;
			
			// Make the data property bindable.
			[Bindable("dataChange")]
			
			// Define the getter method.
			public function get data():Object {
				return _data;
			}
			
			public function set data(value:Object):void {
				// data being bindable, whenenver it changes it enters here and loses all past informations
				// by checkig this, we make sure that the past event doesn't happen
				if (_data == value) {
					return;
				}
				_data = value;
				
				dispatchEvent(new FlexEvent(FlexEvent.DATA_CHANGE));

				propertyName.text = data.name;
				
				
				
				var factory:FactoryWithInitialization = FactoryWithInitialization(PropertiesPlugin.getInstance().propertyRendererClasses[data.type]);			

				if (itemRenderedInstance != null && itemRenderedInstance is factory.generator) {
					trace("Reciclying item renderer");
				} else {
					if (itemRenderedInstance != null) {
						hGroup.removeElement(itemRenderedInstance);
					}
					itemRenderedInstance = factory.newInstance(false);
					itemRenderedInstance.percentWidth = 50;
					itemRenderedInstance.percentHeight = 100;
					hGroup.addElement(itemRenderedInstance);
				}
			
				itemRenderedInstance.data = data;
				
			}

		]]>
	</fx:Script>
	<s:HGroup id="hGroup" width="100%" height="100%" gap="0" verticalAlign="middle">
		<s:Group width="50%" height="100%">
			<s:Rect width="100%" height="100%">
				<s:fill>
					<s:SolidColor color="#9C9C9C"/>
				</s:fill>
			</s:Rect>
			<s:HGroup width="100%" height="100%" verticalAlign="middle" paddingLeft="5">
				<s:Label id = "propertyName"/>
			</s:HGroup>
		</s:Group>
		<s:Line height="100%">
			<s:stroke>
				<s:SolidColorStroke color="#696969"/>
			</s:stroke>
		</s:Line>
	</s:HGroup>  
</s:BorderContainer>
