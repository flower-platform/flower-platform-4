<?xml version="1.0" encoding="utf-8"?>
<!--
	@author Cristina Constantinescu
-->
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 creationComplete="creationCompleteHandler(event)"
		 implements="org.flowerplatform.flexutil.view_content_host.IViewContent, mx.managers.IFocusManagerComponent" 
		 xmlns:props="org.flowerplatform.flex_client.properties.ui.*" 
		 xmlns:tree="org.flowerplatform.flex_client.core.node_tree.*" >
	
	<s:layout>
		<s:VerticalLayout />
	</s:layout>
	
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import org.flowerplatform.flex_client.core.CorePlugin;
			import org.flowerplatform.flex_client.core.editor.remote.Node;
			import org.flowerplatform.flex_client.resources.Resources;
			import org.flowerplatform.flexutil.layout.event.ViewRemovedEvent;
			import org.flowerplatform.flexutil.tree.HierarchicalModelWrapper;
			import org.flowerplatform.flexutil.view_content_host.IViewHost;
			
			protected var _viewHost:IViewHost;
				
			public function get viewHost():IViewHost {
				return _viewHost;
			}
			
			public function set viewHost(value:IViewHost):void {
				_viewHost = value;
			}
			
			public function additionalCloseHandler():void {	
				// nothing to do
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void {				
				CorePlugin.getInstance().serviceLocator.invoke("preferenceService.getPreferenceNodeUri", null, 
					function(nodeUri:String):void {
						nodeTree.initializeTree(nodeUri);
					});				
				
				IEventDispatcher(viewHost).addEventListener(ViewRemovedEvent.VIEW_REMOVED, function (event:ViewRemovedEvent):void {nodeTree.finalizeTree();});
			}
							
		]]>
	</fx:Script>
	
	<s:Button label="{Resources.getMessage('save.action.label')}" icon="{Resources.saveIcon}" 
			  click="{CorePlugin.getInstance().serviceLocator.invoke('resourceService.save', [nodeTree.nodeUri])}" />
	
	<mx:HDividedBox width="100%" height="100%">		
		<tree:NodeTreeComponent id="nodeTree" width="50%" height="100%" 
							   change="{preferenceForm.refreshForm(Node(HierarchicalModelWrapper(nodeTree.dataProvider.getItemAt(event.newIndex)).treeNode), false);}"/>
		
		<props:PropertiesComponent id="preferenceForm" width="50%" height="100%" />		
	</mx:HDividedBox>
	
</s:Group>
