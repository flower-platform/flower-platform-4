<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 creationComplete="creationCompleteHandler(event)"
		 implements="org.flowerplatform.flexutil.view_content_host.IViewContent, mx.managers.IFocusManagerComponent" 
		 xmlns:ns="org.flowerplatform.flex_client.properties.ui.*" 
		 xmlns:infinitegroup="org.flowerplatform.flexdiagram.util.infinitegroup.*" 
		 xmlns:renderer="org.flowerplatform.flexdiagram.renderer.*"
		 xmlns:mindmap="org.flowerplatform.flex_client.mindmap.*" xmlns:ns1="org.flowerplatform.flex_client.core.node_tree.*" xmlns:tree="org.flowerplatform.flexutil.tree.*" xmlns:ns2="http://flex.apache.org/experimental/ns">
	
	<s:layout>
		<s:HorizontalLayout gap="0"/>
	</s:layout>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.IList;
			import mx.events.CollectionEvent;
			import mx.events.FlexEvent;
			import mx.events.TreeEvent;
			
			import org.flowerplatform.flex_client.core.CorePlugin;
			import org.flowerplatform.flex_client.core.editor.remote.Node;
			import org.flowerplatform.flex_client.core.node.NodeRegistry;
			import org.flowerplatform.flex_client.core.node.event.RefreshEvent;
			import org.flowerplatform.flex_client.core.node_tree.NodeTreeHierarchicalModelAdapter;
			import org.flowerplatform.flexutil.action.IAction;
			import org.flowerplatform.flexutil.tree.HierarchicalModelWrapper;
			import org.flowerplatform.flexutil.view_content_host.IViewHost;
			
			import spark.events.IndexChangeEvent;
			
			protected var _viewHost:IViewHost;
			
			protected var nodeRegistry:NodeRegistry;
			
			[Bindable]
			protected var hierarchicalModelAdapter:NodeTreeHierarchicalModelAdapter = new NodeTreeHierarchicalModelAdapter();
						
			protected function creationCompleteHandler(flexvent:FlexEvent):void {
				nodeRegistry = new NodeRegistry();
				nodeRegistry.addEventListener(RefreshEvent.REFRESH, nodeRegistryRefreshCallback);
				CorePlugin.getInstance().resourceNodesManager.nodeRegistryManager.subscribe("fpp:user1/repo-1/preferences.mm", nodeRegistry, subscribeResultCallback);
			}
			
			public function get viewHost():IViewHost {
				return _viewHost;
			}
			
			public function set viewHost(value:IViewHost):void {
				_viewHost = value;
			}
						
			public function additionalCloseHandler():void {	
				// nothing to do
			}
			
			protected function nodeRegistryRefreshCallback(event:RefreshEvent):void {
				treeList.requestRefreshLinearizedDataProvider();
				treeList.invalidateDisplayList();
			}
			
			protected function subscribeResultCallback(rootNode:Node, resourceNode:Node):void {
				treeList.rootNode = rootNode;
				nodeRegistry.expand(rootNode);
			}
			
			protected function treeListItemOpenCloseHandler(event:TreeEvent):void {			
				if (event.type == TreeEvent.ITEM_OPEN) {
					nodeRegistry.expand(Node(event.item));
					event.preventDefault();
				}
				else if (event.type == TreeEvent.ITEM_CLOSE) {
					nodeRegistry.collapse(Node(event.item), false);
					event.preventDefault();
				}
			}

			protected function treeList_changeHandler(event:IndexChangeEvent):void {
				propertiesForm.refreshForm(Node(HierarchicalModelWrapper(treeList.dataProvider.getItemAt(event.newIndex)).treeNode), false);		
			}
			
		]]>
	</fx:Script>
	<mx:HDividedBox width="100%" height="100%">
		<tree:TreeList id="treeList" width="50%" height="100%" change="treeList_changeHandler(event)"
					   hierarchicalModelAdapter="{hierarchicalModelAdapter}" itemRenderer="org.flowerplatform.flex_client.core.node_tree.NodeTreeItemRenderer"
					   itemOpen="treeListItemOpenCloseHandler(event)" itemClose="treeListItemOpenCloseHandler(event)"/>
		
		<ns:PropertiesComponent id="propertiesForm" width="50%" height="100%" />
		
	</mx:HDividedBox>
	
</s:Group>
