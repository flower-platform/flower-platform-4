<?xml version="1.0" encoding="utf-8"?>
<!-- 
license-start

Copyright (C) 2008 - 2013 Crispico, <http://www.crispico.com/>.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation version 3.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details, at <http://www.gnu.org/licenses/>.

Contributors:
Crispico - Initial API and implementation  The product is licensed under GPL. This is the new version of the license.

license-end
-->
<!---
@author Sebastian Solomon
-->
<s:SkinnableContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:local="org.flowerplatform.flex_client.mindmap.ui.*">
	
	<fx:Script>
		<![CDATA[
			import org.flowerplatform.flex_client.mindmap.MindMapConstants;
			import org.flowerplatform.flex_client.mindmap.renderer.MindMapButtonWithIcon;
			import org.flowerplatform.flex_client.resources.Resources;
			import org.flowerplatform.flexutil.Utils;
			
			import spark.components.Group;
						
			public var icons:String;
			
			[SkinPart(required="true")]
			[Bindable]  
			public var imageGroup:Group;
			
			[SkinPart(required="true")]
			[Bindable]
			public var removeGroup:Group;
					
			/**
			 * @author Cristina Constantinescu
			 * @author Sebastian Solomon
			 */
			override protected function createChildren():void {
				super.createChildren();
				
				var btnRemoveAll:MindMapButtonWithIcon = new MindMapButtonWithIcon();
				btnRemoveAll.setStyle("icon", Resources.removeAllIconsIcon);
				btnRemoveAll.toolTip = Resources.getMessage('manageIcons.remove.all.label');
				btnRemoveAll.addEventListener(MouseEvent.CLICK, btnRemoveAll_clickHandler);
				
				var btnRemoveFirst:MindMapButtonWithIcon = new MindMapButtonWithIcon();
				btnRemoveFirst.setStyle("icon", Resources.removeFirstIconIcon);
				btnRemoveFirst.toolTip = Resources.getMessage('manageIcons.remove.first.label');
				btnRemoveFirst.addEventListener(MouseEvent.CLICK, btnRemoveFirst_clickHandler);
				
				var btnRemoveLast:MindMapButtonWithIcon = new MindMapButtonWithIcon();
				btnRemoveLast.setStyle("icon", Resources.removeLastIconIcon);
				btnRemoveLast.toolTip = Resources.getMessage('manageIcons.remove.last.label');
				btnRemoveLast.addEventListener(MouseEvent.CLICK, btnRemoveLast_clickHandler);
				
				removeGroup.addElement(btnRemoveAll);				
				removeGroup.addElement(btnRemoveFirst);				
				removeGroup.addElement(btnRemoveLast);
				
				var icons:Array = MindMapConstants.ICONS_LIST.split(';');
				for (var i:int=0; i < icons.length; i++) {
					var btnImage:MindMapButtonWithIcon = new MindMapButtonWithIcon();
					btnImage.iconUrl = "images/mindmap/icons/" + icons[i] + ".png";
					btnImage.setStyle("icon", Resources.mindmapIcons[icons[i]]);
					btnImage.addEventListener(MouseEvent.CLICK, btnImage_clickHandler);
					
					imageGroup.addElement(btnImage);
				}
			}
					
			protected function btnRemoveAll_clickHandler(event:MouseEvent):void {
				var result:Object = new Object();
				result.type = Utils.REMOVE_ALL;
				handleClick(result);
			}
			
			protected function btnRemoveFirst_clickHandler(event:MouseEvent):void {
				var result:Object = new Object();
				result.type = Utils.REMOVE_FIRST;
				handleClick(result);
			}
			
			protected function btnRemoveLast_clickHandler(event:MouseEvent):void {
				var result:Object = new Object();
				result.type = Utils.REMOVE_LAST;
				handleClick(result);
			}
			
			protected function btnImage_clickHandler(event:MouseEvent):void {
				var result:Object = new Object();
				result.type = Utils.ADD;
				var iconUrl:String = MindMapButtonWithIcon(event.target).iconUrl;
				result.iconUrl = Resources.getResourceUrl(iconUrl);
				handleClick(result);
			}
			
			protected function handleClick(result:Object):void {
			}
						
		]]>
	</fx:Script>
	
</s:SkinnableContainer>
