<?xml version="1.0" encoding="utf-8"?>
<!-- 
	license-start
 
	Copyright (C) 2008 - 2013 Crispico Software, <http://www.crispico.com/>.
	
	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation version 3.
	 
	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details, at <http://www.gnu.org/licenses/>.
	
	license-end
-->
<!---
@author Cristina Constantinescu
-->
<selection:AbstractSelectionRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
									xmlns:s="library://ns.adobe.com/flex/spark" 
									xmlns:mx="library://ns.adobe.com/flex/mx" 
									xmlns:selection="org.flowerplatform.flexdiagram.renderer.selection.*"
									xmlns:ui="org.flowerplatform.flexdiagram.ui.*"
									depth="{int.MAX_VALUE}" >
	
	<fx:Script>
		<![CDATA[
			import mx.events.MoveEvent;
			import mx.events.ResizeEvent;
			
			import org.flowerplatform.flexdiagram.DiagramShellContext;
									
			public var padding:int = 3;
			
			override public function activate(context:DiagramShellContext, model:Object):void {
				super.activate(context, model);			
				
				DisplayObject(target).addEventListener(ResizeEvent.RESIZE, handleTargetMoveResize);	
				DisplayObject(target).addEventListener(MoveEvent.MOVE, handleTargetMoveResize);		
			
				// update position
				handleTargetMoveResize(null);				
			}
			
			override public function deactivate(context:DiagramShellContext, model:Object):void {				
				// remove resize listeners				
				DisplayObject(target).removeEventListener(ResizeEvent.RESIZE, handleTargetMoveResize);			
				DisplayObject(target).removeEventListener(MoveEvent.MOVE, handleTargetMoveResize);	
	
				super.deactivate(context, model);
			}
						
			protected function handleTargetMoveResize(event:Event):void {
				if (event == null || event is ResizeEvent) { // make all node visible if selected
					context.diagramShell.makeModelRendererVisible(model, context);
				}
				setLayoutBoundsPosition(target.x, target.y);
				setLayoutBoundsSize(target.width, target.height);
			}
		
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void {			
				super.updateDisplayList(unscaledWidth, unscaledHeight);
											
				graphics.clear();
				graphics.lineStyle(2, 0x3C37FE);		
				graphics.drawRoundRect(-padding, - padding, target.width + padding * 2, target.height + padding * 2, 10, 10);			
			}
													
		]]>
	</fx:Script>

</selection:AbstractSelectionRenderer>